{% set name = "collier" %}
{% set version = "1.2.8" %}

package:
  # Have top level name be unique from any outputs
  # c.f. https://github.com/conda-forge/conda-forge.github.io/blob/abfc33db28c35e9a8f6b719d0021768f0d5d06be/docs/maintainer/knowledge_base.md?plain=1#L1749
  name: {{ name }}-split
  version: {{ version }}

source:
  url: https://collier.hepforge.org/downloads/?f={{ name }}-{{ version }}.tar.gz
  sha256: 5cb24ce24ba1f62b7a96c655b31e9fddccc603eff31e60f9033b16354a6afd89
  folder: source

build:
  number: 5

outputs:
  - name: {{ name }}

    build:
      skip: true  # [win]
      run_exports:
        - {{ pin_subpackage('collier', max_pin='x.x') }}
      ignore_run_exports_from:
        - {{ compiler('cxx') }}
        - sed
      script:
        # Use modern CMake by using range of compatible versions
        - sed -i 's/cmake_minimum_required (VERSION 2.8.7)/cmake_minimum_required(VERSION 3.15...3.31)/g' source/CMakeLists.txt
        - cmake ${CMAKE_ARGS} -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_Fortran_COMPILER=$FC -S source -B build
        - cmake -LH build
        - cmake --build build --clean-first --parallel="${CPU_COUNT}"
        - cmake --install build

    requirements:
      build:
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}  # Not used, but needed for CMake to not error
        - {{ compiler('fortran') }}
        - cmake
        - make
        - sed

    test:
      source_files:
        - source/demos
      requires:
        - {{ compiler('fortran') }}
      commands:
        - test -f $PREFIX/lib/cmake/collierConfig.cmake
        - test -f $PREFIX/lib/cmake/collierConfigVersion.cmake
        - test -f $PREFIX/lib/libcollier${SHLIB_EXT}
        - test ! -f $PREFIX/lib/libcollier.a
        - test -f $PREFIX/include/collier.mod

        - cd source/demos
        # The addition of -I$PREFIX/include is only needed on osx, but for
        # simplicity add it for all.
        # demo executable requires user keyboard input, so skip after build.
        - $FC demo.f90 -o demo $FFLAGS -I$PREFIX/include -lcollier
        - $FC democache.f90 -o democache $FFLAGS -I$PREFIX/include -lcollier
        - ./democache  # [build_platform == target_platform]

  - name: {{ name }}-static

    build:
      skip: true  # [win]
      ignore_run_exports_from:
        - {{ compiler('cxx') }}
        - sed
      script:
        # Use modern CMake by using range of compatible versions
        - sed -i 's/cmake_minimum_required (VERSION 2.8.7)/cmake_minimum_required(VERSION 3.15...3.31)/g' source/CMakeLists.txt
        - cmake ${CMAKE_ARGS} -DCMAKE_INSTALL_PREFIX=$PREFIX -Dstatic=ON -DCMAKE_Fortran_COMPILER=$FC -S source -B build
        - cmake -LH build
        - cmake --build build --clean-first --parallel="${CPU_COUNT}"
        - cmake --install build

    requirements:
      build:
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}  # Not used, but needed for CMake to not error
        - {{ compiler('fortran') }}
        - cmake
        - make
        - sed

    test:
      source_files:
        - source/demos
      requires:
        - {{ compiler('fortran') }}
      commands:
        - test -f $PREFIX/lib/cmake/collierConfig.cmake
        - test -f $PREFIX/lib/cmake/collierConfigVersion.cmake
        - test -f $PREFIX/lib/libcollier.a
        - test ! -f $PREFIX/lib/libcollier${SHLIB_EXT}
        - test -f $PREFIX/include/collier.mod

        - cd source/demos
        # The addition of -I$PREFIX/include is only needed on osx, but for
        # simplicity add it for all.
        # demo executable requires user keyboard input, so skip after build.
        - $FC demo.f90 -o demo $FFLAGS -I$PREFIX/include -lcollier
        - $FC democache.f90 -o democache $FFLAGS -I$PREFIX/include -lcollier
        - ./democache  # [build_platform == target_platform]

about:
  home: https://collier.hepforge.org/
  summary: 'COLLIER: A Complex One-Loop LIbrary with Extended Regularizations'
  description: |
    COLLIER is a fortran library for the numerical evaluation of one-loop
    scalar and tensor integrals appearing in perturbative relativistic
    quantum field theory with the following features:
    * scalar and tensor integrals for high particle multiplicities
    * dimensional regularization for ultraviolet divergences
    * dimensional regularization for soft infrared divergences (mass
      regularization for abelian soft divergences is supported as well)
    * dimensional regularization or mass regularization for collinear mass
      singularities
    * complex internal masses (for unstable particles) fully supported
      (external momenta and virtualities are expected to be real)
    * numerically dangerous regions (small Gram or other kinematical
      determinants) cured by dedicated expansions
    * two independent implementations of all basic building blocks allow
      for internal cross-checks
    * cache system to speed up calculations

    If you use Collier for a publication, please cite all the references
    listed [here](https://collier.hepforge.org/documentation.html).
  license: GPL-3.0-only
  license_family: GPL
  license_file: source/COPYING
  doc_url: https://collier.hepforge.org/documentation.html

extra:
  feedstock-name: collier
  recipe-maintainers:
    - matthewfeickert
    - ansgardenner
    - dittmaier
